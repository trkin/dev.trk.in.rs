<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DEV TRK</title>
    <description>TRK RUBY NOVI SAD
</description>
    <link>https://dev.trk.in.rs/</link>
    <atom:link href="https://dev.trk.in.rs/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 23 Feb 2024 14:10:32 +0000</pubDate>
    <lastBuildDate>Fri, 23 Feb 2024 14:10:32 +0000</lastBuildDate>
    <generator>Jekyll v4.3.2</generator>
    
      <item>
        <title>Gitlab</title>
        <description>&lt;p&gt;https://docs.gitlab.com/ee/install/docker.html&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export GITLAB_HOME=/srv/gitlab
sudo docker run --detach \
  --hostname gitlab_tunnel.trk.in.rs \
  --publish 443:443 --publish 80:80 --publish 22:22 \
  --name gitlab \
  --restart always \
  --volume $GITLAB_HOME/config:/etc/gitlab \
  --volume $GITLAB_HOME/logs:/var/log/gitlab \
  --volume $GITLAB_HOME/data:/var/opt/gitlab \
  --shm-size 256m \
  gitlab/gitlab-ee:latest

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 25 May 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/05/25/gitlab/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/05/25/gitlab/</guid>
        
        
      </item>
    
      <item>
        <title>Rails Testing</title>
        <description>&lt;h1 id=&quot;rails-testing&quot;&gt;Rails testing&lt;/h1&gt;

&lt;p&gt;We usually use minitest since they are default Rails tool.
You can start learnig from guide &lt;a href=&quot;https://guides.rubyonrails.org/testing.html&quot;&gt;https://guides.rubyonrails.org/testing.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We use slow system test only for a few tests for success path flow. Instead of
system test, we use faster controller tests.
We use faster controller &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ActionDispatch::IntegrationTest&lt;/code&gt; test&lt;/p&gt;

&lt;p&gt;You can find basic minitest assertions
&lt;a href=&quot;https://guides.rubyonrails.org/testing.html#available-assertions&quot;&gt;https://guides.rubyonrails.org/testing.html#available-assertions&lt;/a&gt;
but for each &lt;a href=&quot;https://guides.rubyonrails.org/testing.html#a-brief-note-about-test-cases&quot;&gt;class&lt;/a&gt;
you can use other helpers and assertions like
&lt;a href=&quot;https://api.rubyonrails.org/v7.0.4.2/classes/ActionDispatch/Integration/RequestHelpers.html&quot;&gt;follow_redirect!&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;fixtures&quot;&gt;Fixtures&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://guides.rubyonrails.org/testing.html#the-low-down-on-fixtures&quot;&gt;https://guides.rubyonrails.org/testing.html#the-low-down-on-fixtures&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In each fixture yml file we define &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DEFAULT&lt;/code&gt; that will contain defaults needed
to create valid item (for example presence validation on name and null false in
datable).
We create one fixture with the same name as model, for example
&lt;a href=&quot;https://github.com/trkin/rails_minitest/blob/main/test/fixtures/users.yml&quot;&gt;https://github.com/trkin/rails_minitest/blob/main/test/fixtures/users.yml&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# test/fixtures/users.yml
# https://github.com/trkin/rails_minitest/blob/main/test/fixtures/users.yml
DEFAULTS: &amp;amp;DEFAULTS
  email: $LABEL@example.com
  encrypted_password: &amp;lt;%= User.new.send(:password_digest, &apos;password&apos;) %&amp;gt;
  confirmed_at: &amp;lt;%= Time.zone.now %&amp;gt;

user:
  &amp;lt;&amp;lt;: *DEFAULTS

unconfirmed:
  &amp;lt;&amp;lt;: *DEFAULTS
  confirmed_at:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The reason is that we do not need to think about the name when we a record. For
example when we need a user than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user = users(:user)&lt;/code&gt;, when we need a comment
than we have it as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;comment = comment(:comment)&lt;/code&gt;
Those default records should represent common usage, eg &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;comment(:comment)&lt;/code&gt;
belons to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;posts(:post)&lt;/code&gt; which belongs to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;users(:user)&lt;/code&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 07 Apr 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/04/07/rails-testing/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/04/07/rails-testing/</guid>
        
        
      </item>
    
      <item>
        <title>Docker Tips</title>
        <description>&lt;h2 id=&quot;install-on-ubuntu&quot;&gt;Install on ubuntu&lt;/h2&gt;

&lt;p&gt;Follow instructions on &lt;a href=&quot;https://docs.docker.com/engine/install/ubuntu/&quot;&gt;https://docs.docker.com/engine/install/ubuntu/&lt;/a&gt;
After adding GPG key and repo you can run&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo docker run hello-world
Hello from Docker!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or you can use convenience script&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh ./get-docker.sh --dry-run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Uninstall with&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get purge docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras
sudo rm -rf /var/lib/docker
sudo rm -rf /var/lib/containerd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To enable users to run use docker engine without sudo and you do not have error
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;permission denied while trying to connect to the Docker daemon socket at
unix:///var/run/docker.sock:&lt;/code&gt;
https://docs.docker.com/engine/install/linux-postinstall/&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo usermod -aG docker $USER
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;run ubuntu shell
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -it ubuntu /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;https://docs.docker.com/engine/install/linux-postinstall/&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Mar 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/03/30/docker-tips/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/03/30/docker-tips/</guid>
        
        
      </item>
    
      <item>
        <title>Aws Cli</title>
        <description>&lt;h1 id=&quot;install-and-configure-aws-cli&quot;&gt;Install and configure AWS cli&lt;/h1&gt;

&lt;p&gt;Install and enable completion&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Ubuntu
sudo apt install awscli

# .bash_profile should source .bashrc
echo complete -C &apos;/usr/local/bin/aws_completer&apos; aws &amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You need keys to connect and configure will store them in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.aws/credentials&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws configure
AWS Access Key ID [None]: 123....4P5Q
AWS Secret Access Key [None]: 123...TCzr
Default region name [None]: us-east-1
Default output format [None]:

cat ~/.aws/credentials
[default]
aws_access_key_id = 123...4P5Q
aws_secret_access_key = 123...TCzr

cat ~/.aws/config
[default]
region = us-east-1

aws configure
AWS Access Key ID [**************4P5Q]:
AWS Secret Access Key [****************TCzr]:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can have several profiles in additional to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[default]&lt;/code&gt;.
To add another profile&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws configure --profile duleorlovic
# this will add [profile duleorlovic] to ~/.aws/config
# and [duleorlovic] to ~/.aws/credentials
# you can use in terraform provider &quot;aws&quot; { profile = &quot;duleorlovic&quot; }
aws ec2 describe-vpcs --profile duleorlovic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can check which profile you are using&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# show current profile settings
aws configure list

# list all profile names
aws configure list-profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To change profile in shell you can export&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export AWS_PROFILE=duleorlovic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Another way to change profile is to use different credentials file&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AWS_SHARED_CREDENTIALS_FILE=~/.aws/credentials_duleorlovic aws s3 ls s3://my-trk-bucket
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can extract data with query to parse json for example
Find other examples on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws ec2 describe-instances help&lt;/code&gt;
TODO: add examples&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[*]&lt;/code&gt; array&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.attribute&lt;/code&gt;
you can have &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--output text&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--output json&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--output table&lt;/code&gt;, or you can
use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jq&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# list all public instances, using * returns array of arrays
aws ec2 describe-instances --query &quot;Reservations[*].Instances[*].PublicIpAddress&quot; --output=text
# this returns inline results since it is single array
aws ec2 describe-instances --query &quot;Reservations[].Instances[].PublicIpAddress&quot; --output=text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can combine columns, for example to show ARN&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws ec2 describe-instances --region us-east-1 | jq -r &apos;.Reservations[] | .OwnerId as $OwnerId | ( .Instances[] | { &quot;ARN&quot;: &quot;arn:aws:ec2:\(.Placement.AvailabilityZone[:-1]):\($OwnerId):instance/\(.InstanceId)&quot;, &quot;AvailabilityZone&quot;: &quot;\(.Placement.AvailabilityZone)&quot;, InstanceId, PublicDnsName, PrivateDnsName, Tags} )&apos; | jq -s .
[
  {
    &quot;ARN&quot;: &quot;arn:aws:ec2:us-east-1:606470370249:instance/i-0b7175eed059b8f41&quot;,
    &quot;AvailabilityZone&quot;: &quot;us-east-1a&quot;,
    &quot;InstanceId&quot;: &quot;i-0b7175eed059b8f41&quot;,
    &quot;PublicDnsName&quot;: &quot;ec2-34-230-46-141.compute-1.amazonaws.com&quot;,
    &quot;PrivateDnsName&quot;: &quot;ip-172-31-90-19.ec2.internal&quot;,
    &quot;Tags&quot;: [
      {
        &quot;Key&quot;: &quot;Name&quot;,
        &quot;Value&quot;: &quot;test&quot;
      }
    ]
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/03/26/aws-cli/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/03/26/aws-cli/</guid>
        
        
      </item>
    
      <item>
        <title>Git Tips</title>
        <description>&lt;h2 id=&quot;git-style&quot;&gt;Git style&lt;/h2&gt;

&lt;p&gt;For Git we follows this guides&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/guides/tree/main/git&quot;&gt;https://github.com/thoughtbot/guides/tree/main/git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you move large number of files, or run linters, that should be in separate
commit (or even separate pull request) and put the command in commit message&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git mv test/fixtures spec
git commit -am&quot;git mv test/fixtures spec&quot;

# or
standardrb --fix spec
git commit -am&quot;standardrb --fix spec&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;code-review&quot;&gt;Code review&lt;/h2&gt;

&lt;p&gt;For code review&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/guides/tree/main/code-review&quot;&gt;https://github.com/thoughtbot/guides/tree/main/code-review&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When working on some task, for example issue 123 than we usually create a branch
that looks like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i#{issue number}_#{description}&lt;/code&gt; and use commit number at the
end &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit -m&apos;#{some description} ##{issue number}&lt;/code&gt;
For example&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout -b i123_add_test_for_signup
# make changes
git commit -m&apos;Add test for signup #123`
git push -u origin HEAD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;git-hooks&quot;&gt;Git hooks&lt;/h2&gt;

&lt;p&gt;We use git hook for commit message so the issue number is automatically added to
commit message.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat &amp;gt; .git/hooks/prepare-commit-msg &amp;lt;&amp;lt; &apos;HERE_DOC&apos;
#!/bin/bash
#
# Source https://dev.trk.in.rs/2023/03/21/git-tips#git-hooks
#
# https://gist.github.com/jimschubert/9073276
# Automatically adds branch name to every commit message.
# Modified from the stackoverflow answer here: http://stackoverflow.com/a/11524807/151445
#

# Get branch name, use sed to strip name and keep only numbers
# i123_my_branch_name -&amp;gt; 123
issueNumber=$(git branch | grep &apos;*&apos; | grep -o &apos;[0-9]*&apos;)
# issueNumber=$(git branch --show-current)

# Get the first line, ex: from ammending or mmm from git commit -am&apos;mmm&apos;
firstLine=$(head -n1 $1)

# echo firstLine=$firstLine issueNumber=$issueNumber
if [[ -n $issueNumber &amp;amp;&amp;amp; ! $firstLine =~ $issueNumber ]] ; then
  # Prepend issueNumber to COMMIT_MSG
  # echo &quot;i#$issueNumber&quot;&apos; &apos;$(cat &quot;$1&quot;| sed &apos;/^#.*/d&apos;) &amp;gt; &quot;$1&quot;
  #
  # Append issueNumber to COMMIT_MSG
  # echo -n &quot;#$issueNumber&quot; &amp;gt;&amp;gt; &quot;$1&quot; # this will add at the end
  echo $(cat &quot;$1&quot; | sed &apos;/^#.*/d&apos;)&apos; &apos;&quot;#$issueNumber&quot; &amp;gt; &quot;$1&quot;

  # Insert issueNumber at the end of the commit message file
  # sed -i &quot;1s@^@\n\n$issueNumber@&quot; $1
fi
HERE_DOC

chmod +x .git/hooks/prepare-commit-msg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next time you make a commit on a branch &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i123_add_test_for_signup&lt;/code&gt; than commit
message will include &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[123]&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit -am&quot;Add test for signup&quot;
[#123] Add test for signup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;gitflow&quot;&gt;Gitflow&lt;/h2&gt;

&lt;p&gt;For big projects we follow GitFlow
so all PR are done on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;develop&lt;/code&gt; branch. Only &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i123_hotfix_something&lt;/code&gt; branch
start from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; and merged back to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;develop&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Nice tutorial:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow&quot;&gt;https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;github-cli&quot;&gt;Github cli&lt;/h2&gt;

&lt;p&gt;We also use gh cli&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# create PR and put commit messages as comment
gh pr create --fill

# assign reviewers
gh pr edit

# rebase and delete local and remote branch
gh pr merge -r -d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;remove-all-branch-on-which-im-not-the-author&quot;&gt;Remove all branch on which I’m not the author&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#!/bin/bash

current_user=$(git config user.email)

# Remove all local branches on which I&apos;m not the author of the tip

for branch in $(git branch --format=&apos;%(refname:short)&apos;); do
    if [[ &quot;$branch&quot; =~ ^(main|develop|master)$ ]]; then
        continue
    fi
    author=$(git log -1 --format=&apos;%ae&apos; $branch)
    if [ &quot;$author&quot; != &quot;$current_user&quot; ]; then
      echo removing -$branch- $author
      git branch -D $branch
      echo
    fi
done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/03/21/git-tips/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/03/21/git-tips/</guid>
        
        
      </item>
    
      <item>
        <title>Code Style Guides</title>
        <description>
</description>
        <pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/03/15/code-style-guides/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/03/15/code-style-guides/</guid>
        
        
      </item>
    
      <item>
        <title>Cloudflare Tunnel</title>
        <description>&lt;p&gt;Ngrok is a service which gives you random url whenever you start a new tunnel.
&lt;a href=&quot;https://www.cloudflare.com/products/tunnel/&quot;&gt;Clodflare tunnel&lt;/a&gt; is a free
service that you can use as ngrok alternative.&lt;/p&gt;

&lt;p&gt;Install https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/tunnel-guide/local/&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# macOS
brew install cloudflared
# ubuntu
wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb &amp;amp;&amp;amp; dpkg -i cloudflared-linux-amd64.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and login&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cloudflared tunnel login
# this will create and download ~/.cloudflared/cert.pem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can create a temporary tunnel with random url&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cloudflared tunnel --url http://localhost:3000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and it will be available under .trycloudflare.com like
&lt;a href=&quot;https://request-composer-pools-requirements.trycloudflare.com&quot;&gt;https://request-composer-pools-requirements.trycloudflare.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For long living tunnels which uses the same url you should use
&lt;a href=&quot;https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/tunnel-guide/local/&quot;&gt;https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/tunnel-guide/local/&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# list all tunnels created previously using cloudflared cli on web
cloudflared tunnel list

# create tunnel and config.json file
cloudflared tunnel create mytunnel
# Tunnel credentials written to /home/dule/.cloudflared/asd....asd.json

# create config file that uses this credentials and tunnel name
cat &amp;gt; ~/.cloudflared/config.yaml &amp;lt;&amp;lt; &apos;HERE_DOC&apos;
url: http://localhost:3000
tunnel: mytunnel
# home shortcut ~/.cloudflared/ will not work
credentials-file: /home/dule/.cloudflared/asd....asd.json
HERE_DOC

# create DNS CNAME record to route to tunnel eg
# mytunnel asd...asd.cfargotunnel.com
cloudflared tunnel route dns mytunnel mytunnel.trk.in.rs

# start the tunnel
cloudflared tunnel run mytunnel

# check tunnel status
cloudflared tunnel info mytunnel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For multiple domains you just need to add same CNAME records to other
subdomains.&lt;/p&gt;

&lt;p&gt;To block by IP address, go to Security &amp;gt; WAF and create rule with “IP Source
Address” “is not in” {my ip address} And “Hostname” “equals”
“mytunnel.trk.in.rs” than “Block”.&lt;/p&gt;

&lt;p&gt;If you install as a service than you need to stop that service&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl status cloudflared
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;cloudflare-dns&quot;&gt;Cloudflare DNS&lt;/h1&gt;

&lt;p&gt;If you need ssh port 22 access than you need to disable Proxied and use DNS only
proxy status.
Those&lt;/p&gt;

</description>
        <pubDate>Thu, 23 Feb 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/02/23/cloudflare-tunnel/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/02/23/cloudflare-tunnel/</guid>
        
        
      </item>
    
      <item>
        <title>Build Kindergarten Exchange App</title>
        <description>&lt;p&gt;As a practice task in our &lt;a href=&quot;/2023/01/04/internship/&quot;&gt;first intership&lt;/a&gt;
we are rebuilding a webapp that will help parents organize themselves and find
free places in kindergartens that are closer to them. When there are no
vacancies the only way to move the kids to another kindergarten is to find
someone else who also wants to move. Existing app source is
&lt;a href=&quot;https://github.com/trkin/premesti.se&quot;&gt;https://github.com/trkin/premesti.se&lt;/a&gt; and
we are rebuilding to use latest tools like &lt;a href=&quot;https://turbo.hotwired.dev/&quot;&gt;Turbo&lt;/a&gt;
Source code is on github&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/trkin/kindergarten-exchange&quot;&gt;https://github.com/trkin/kindergarten-exchange&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Main tools that we will use:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ruby on Rails as a server side engine&lt;/li&gt;
  &lt;li&gt;Github projects for organizing tasks&lt;/li&gt;
  &lt;li&gt;Neo4j graph database to find matches in rotations&lt;/li&gt;
  &lt;li&gt;Figma for designs&lt;/li&gt;
  &lt;li&gt;Tailwind for styles&lt;/li&gt;
  &lt;li&gt;Jekyll for blog&lt;/li&gt;
  &lt;li&gt;Turbo and Stimulus for registration and chat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All practicioners should choose one area in which to become a master so they can
teach other teammates.&lt;/p&gt;

&lt;p&gt;Main features should be:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;user registration using various ways: phone number, email, social buttons&lt;/li&gt;
  &lt;li&gt;user select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;move&lt;/code&gt; ie kindergarten in which they are interested in&lt;/li&gt;
  &lt;li&gt;user can share their moves on social networks&lt;/li&gt;
  &lt;li&gt;graph engine that calculates matches for each new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;move&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;for each match a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chat&lt;/code&gt; is created and notifications are sent&lt;/li&gt;
  &lt;li&gt;admin pages to invite users to register, to send promotional emails and users
can unsubscribe to them&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Advanced features:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;enable payment so moves that includes at least one premium move can chat
immediatelly, and moves that are all free are waiting one week for
notification and chat (send email to buy premium or to wait).
Premium can be obtained by sharing on social networks. Use other features for
premium like: free sms notification&lt;/li&gt;
  &lt;li&gt;create mobile apps for Android and iOS&lt;/li&gt;
  &lt;li&gt;create Viber app for registration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;App should be using I18n transations and covered with tests.&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Feb 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/02/21/build-kindergarten-exchange-app/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/02/21/build-kindergarten-exchange-app/</guid>
        
        
      </item>
    
      <item>
        <title>Learning Materials For Ruby And Rails</title>
        <description>&lt;h1 id=&quot;ruby&quot;&gt;Ruby&lt;/h1&gt;

&lt;p&gt;To start learning Ruby, you can try with:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.freecodecamp.org/news/learning-ruby-from-zero-to-hero-90ad4eecc82d/&quot;&gt;FreeCodeCamp Learning Ruby: From Zero to Hero&lt;/a&gt; (text)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=wI-hfFW9hfI&quot;&gt;The Nerdy Dev Learn Ruby Programming in 3 hours FULL COURSE&lt;/a&gt; (video)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To Install on your machine the best is using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rbenv&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;ruby-on-rails&quot;&gt;Ruby on Rails&lt;/h1&gt;

&lt;p&gt;The best way for using some tools is to read it’s documentation. So for RoR you
should start from&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://guides.rubyonrails.org/&quot;&gt;https://guides.rubyonrails.org/&lt;/a&gt; (text)
You can start with &lt;a href=&quot;https://guides.rubyonrails.org/getting_started.html&quot;&gt;Getting started with
Rails&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/@Deanin&quot;&gt;https://www.youtube.com/@Deanin&lt;/a&gt; Deanin
youtube channel. You can start with &lt;a href=&quot;https://www.youtube.com/watch?v=TlgSp2XPCY4&amp;amp;list=PL3mtAHT_eRezB9fnoIcKS4vYFjm23vddb&amp;amp;index=1&quot;&gt;Intro to Ruby on Rails 7 Fullstack
Tutorial | Rails for Beginners Part 1&lt;/a&gt;.
Note that some videos can be found in other playlists for example &lt;a href=&quot;https://www.youtube.com/watch?v=4GjXSI6jcLI&amp;amp;list=PL3mtAHT_eRexG8W__yiMgv3tcIdbLlwho&amp;amp;index=50&quot;&gt;The VSCode Rails Extensions
Used In This Series | Intro To Ruby On Rails For Beginners Part 17
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;javascript&quot;&gt;Javascript&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/mbeaudru/modern-js-cheatsheet#template-literals&quot;&gt;https://github.com/mbeaudru/modern-js-cheatsheet#template-literals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 24 Jan 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/01/24/learning-materials-for-ruby-and-rails/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/01/24/learning-materials-for-ruby-and-rails/</guid>
        
        
      </item>
    
      <item>
        <title>Install Ruby Using Brew Rbenv</title>
        <description>&lt;h2 id=&quot;first-steps-on-new-ubuntu-machine&quot;&gt;First steps on new Ubuntu machine&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# git is used to code collaboration
sudo apt install -y git curl
# necessary if you want to commit to any project
git config --global user.email &quot;you@example.com&quot;
git config --global user.name &quot;Your Name&quot;
# nice editor
sudo apt install vim
# if you want to change default editor from nano to something else
sudo update-alternatives --config editor
# enable ssh to localhost
sudo apt install openssh-server
# generate ~/ssh/id_rsa and ~/ssh/id_rsa.pub to add to
ssh-keygen

# network tool to find all open ports and ip addresses, eg  nmap -F 192.168.1.-
sudo apt install nmap

# for building ruby
sudo apt install -y build-essential libz-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Install google chrome from &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;https://www.google.com/chrome/&lt;/a&gt;
Right click on .deb file in Downloads, select Properties and in ‘Open With’ tab select ‘Software Install’ and click ‘Set as default’. Exit and double click on the .deb file to install Chrome.&lt;/p&gt;

&lt;h2 id=&quot;brew&quot;&gt;Brew&lt;/h2&gt;

&lt;p&gt;Use brew instead of manually install packages so all users can use the same libs
&lt;a href=&quot;https://brew.sh/&quot;&gt;https://brew.sh/&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; and reopen terminal. Typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reset&lt;/code&gt; won’t work&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &apos;eval &quot;$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)&quot;&apos; &amp;gt;&amp;gt; /home/$USER/.bashrc
cat ~/.bashrc # you should see above line
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew&lt;/code&gt; every time you open terminal&lt;/p&gt;

&lt;p&gt;If you use multiseat than you need to add new group and attach each user to it
https://apple.stackexchange.com/a/45003/449651
Error is&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew update &amp;amp;&amp;amp; brew upgrade ruby-build
Error: /home/linuxbrew/.linuxbrew/Homebrew is not writable. You should change the
ownership and permissions of /home/linuxbrew/.linuxbrew/Homebrew back to your
user account:
  sudo chown -R $(whoami) /home/linuxbrew/.linuxbrew/Homebrew
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Add group&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo groupadd brew
compgen -u # list all users
sudo usermod -aG brew dule
sudo usermod -aG brew mile

sudo chgrp -R brew /home/linuxbrew/.linuxbrew/
sudo chmod -R g+w /home/linuxbrew/.linuxbrew/

# check that group has rw-
ls -la /home/linuxbrew/.linuxbrew/Homebrew/README.md
-rw-rw-r-- 1 dule brew 8495 феб  9 08:40 /home/linuxbrew/.linuxbrew/Homebrew/README.md

# also https://zenn.dev/megeton/articles/f9f17d184fead6
git config --global --add safe.directory /usr/local/Homebrew
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;install-rbenv&quot;&gt;Install rbenv&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install rbenv ruby-build libyaml openssl@1.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add this to your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.bashrc&lt;/code&gt; so you can access rbenv commands&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo export PATH=&quot;$HOME/.rbenv/bin:$PATH&quot; &amp;gt;&amp;gt; ~/.bashrc
echo eval &quot;$(rbenv init -)&quot; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;installing-ruby-using-rbenv&quot;&gt;Installing Ruby using rbenv&lt;/h2&gt;

&lt;p&gt;To change ruby version you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.ruby-version&lt;/code&gt; file in current or any parent
folder. For example you can set default version with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.ruby-version&lt;/code&gt; in your
home folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo 3.2.0 &amp;gt; ~/.ruby-version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can also change ruby version with this command or env variable&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rbenv shell 3.2.0

# this is the same as export RBENV_VERSION=3.2.0

# check all installed versions
rbenv versions
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ruby-320&quot;&gt;Ruby 3.2.0&lt;/h3&gt;

&lt;p&gt;For compiling Ruby 3.2.0 you should use openssl@3
Check &lt;a href=&quot;https://github.com/rbenv/ruby-build/wiki&quot;&gt;rbenv/ruby-build&lt;/a&gt; wiki for
additional info&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install openssl@3

export RUBY_CONFIGURE_OPTS=&quot;--with-openssl-dir=`brew --prefix openssl@3`&quot;

rbenv install 3.2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Export these variables, &lt;strong&gt;don’t&lt;/strong&gt; save them in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; it won’t work for
every Ruby version so to be on the safe side just export them every time you
want to install new Ruby version&lt;/p&gt;

&lt;p&gt;When you install gems that need to be compiled locally than you might need to
export PATH, LDFLAGS, CPPFLAGS or PKG_CONFIG_PATH&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export PATH=&quot;/home/linuxbrew/.linuxbrew/opt/openssl@3/bin:$PATH&quot;
export LDFLAGS=&quot;-L`brew --prefix openssl@3`/lib&quot;
export CPPFLAGS=&quot;-I`brew --prefix openssl@3`/include&quot;
export PKG_CONFIG_PATH=&quot;`brew --prefix openssl@3`/lib/pkgconfig&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note: &lt;strong&gt;Do not restart terminal&lt;/strong&gt; if you are exporting variables, it won’t persist in the next session&lt;/p&gt;

&lt;p&gt;For example Installing Ruby version that uses openssl@1.1&lt;/p&gt;

&lt;p&gt;To install version of ruby that uses openssl@1.1 we need to use RUBY_CONFIGURE_OPTS&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export RUBY_CONFIGURE_OPTS=&quot;--with-openssl-dir=`brew --prefix openssl@1.1`&quot;
ruby install 2.6.7

export LDFLAGS=&quot;-L`brew --prefix openssl@1.1`/lib&quot;
export CPPFLAGS=&quot;-I`brew --prefix openssl@1.1`/include&quot;
export PKG_CONFIG_PATH=&quot;`brew --prefix openssl@1.1`/lib/pkgconfig&quot;

bundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For ruby 2.6.7 on mac for error&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vm.c:2295:9: error: call to undeclared function &apos;rb_native_mutex_destroy&apos;; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
        rb_native_mutex_destroy(&amp;amp;vm-&amp;gt;waitpid_lock);
        ^
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;you might need&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CFLAGS=&quot;-Wno-error=implicit-function-declaration&quot; rbenv install 2.6.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For ruby 2.6.6 on mac you might see error&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;error closure.c:264:14: error: call to undeclared function &apos;ffi_prep_closure&apos;; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;so you need to configure libffi&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RUBY_CFLAGS=-DUSE_FFI_CLOSURE_ALLOC rbenv install 2.6.6
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For Ruby 3.2.1 on ubuntu you might need to use define readline location&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export RUBY_CONFIGURE_OPTS=&quot;--with-openssl-dir=`brew --prefix openssl` --with-readline-dir=`brew --prefix readline`&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;On macOS you, ruby 3.2.1 can be installed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rbenv install 3.2.1&lt;/code&gt; but make sure
you are not using Rosseta (Finder &amp;gt; Menu Go &amp;gt; Utilities &amp;gt; Terminal &amp;gt; right click
Get Info &amp;gt; uncheck Open using Rosetta) so the output is arm&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;uname -m
arm64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;jekyll&quot;&gt;Jekyll&lt;/h2&gt;

&lt;p&gt;When you install new gems, sometimes you need to rehash to create new shims
&lt;a href=&quot;https://github.com/rbenv/rbenv#rbenv-rehash&quot;&gt;https://github.com/rbenv/rbenv#rbenv-rehash&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install jekyll
Command &apos;jekyll&apos; not found, but can be installed with:

rbenv rehash
jekyll # now it works
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;rails&quot;&gt;Rails&lt;/h2&gt;

&lt;p&gt;If you notice an error when you are using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rails s&lt;/code&gt; command&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;LoadError: libssl.so.1.1: cannot open shared object file: No such file or directory - /home/dule/.rbenv/versions/3.2.0/lib/ruby/gems/3.2.0/gems/puma-5.6.5/lib/puma/puma_http11.so
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;you should remove puma gem and install with correct LD and CPP flags pointing to
openssl 3.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem uninstall puma

export LDFLAGS=&quot;-L$(brew --prefix openssl@3)/lib&quot;
export CPPFLAGS=&quot;-I$(brew --prefix openssl@3)/include&quot;

bundle

# or you can install specific version using arguments to `gem install`
gem install puma -v 5.6.5 -- --with-cppflags=-I`brew --prefix openssl@3`/include --with-ldflags=-L`brew --prefix openssl@3`/lib
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Alternative solution is to disable SSL when installing puma&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem uninstall puma
DISABLE_SSL=1 bundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;nvm-node-yarn&quot;&gt;NVM node yarn&lt;/h2&gt;

&lt;p&gt;Install nvm &lt;a href=&quot;https://github.com/nvm-sh/nvm&quot;&gt;https://github.com/nvm-sh/nvm&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;than restart shell (ie open new shell) install node&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;nvm install 14
npm install -g yarn
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Old node-sass has some issues with node 16 (it can not find python even python2
is installed)
&lt;a href=&quot;https://stackoverflow.com/questions/67241196/error-no-template-named-remove-cv-t-in-namespace-std-did-you-mean-remove&quot;&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;wall&quot;&gt;Wall&lt;/h2&gt;

&lt;p&gt;Enable tty group so user can send messages
&lt;a href=&quot;https://unix.stackexchange.com/a/313558/150895&quot;&gt;https://unix.stackexchange.com/a/313558/150895&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;python&quot;&gt;Python&lt;/h2&gt;

&lt;p&gt;You can install python using pyenv https://github.com/pyenv/pyenv similar to
rbenv&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install pyenv
pyenv install 2.7.18
# pyenv global 2.7.18
pyenv shell 2.7.18
pyenv versions

# Add to .bashrc
# PATH=$(pyenv root)/shims:$PATH
# eval &quot;$(pyenv init -)&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/01/11/install-ruby-using-brew-rbenv/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/01/11/install-ruby-using-brew-rbenv/</guid>
        
        
      </item>
    
  </channel>
</rss>
