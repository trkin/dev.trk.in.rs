<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DEV TRK</title>
    <description>TRK RUBY NOVI SAD
</description>
    <link>https://dev.trk.in.rs/</link>
    <atom:link href="https://dev.trk.in.rs/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 29 Dec 2024 09:06:02 +0000</pubDate>
    <lastBuildDate>Sun, 29 Dec 2024 09:06:02 +0000</lastBuildDate>
    <generator>Jekyll v4.3.3</generator>
    
      <item>
        <title>Internship Srbobran</title>
        <description>&lt;p&gt;Otvaramo office u Srbobranu kod Knjižare Švrća u tržnom centru Trg Republike 1 i
držimo kurs programiranja za početni nivo (html/css/javascript) za sve zainteresovane koji hoće da se isprobaju u web programiranju.&lt;/p&gt;

&lt;p&gt;Kurs će se održavati jednom nedeljno, ponedeljkom od 16h-18h tokom Oktobra, Novembra i Decembra.
Tokom kursa ćete napraviti sajt za sebe ili nekog koga poznajete (npr nekog proizvođača).
Koristićemo sledeće alate (w3schools je odličan za učenje):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3schools.com/html/default.asp&quot;&gt;html&lt;/a&gt; (pročitati kako se koriste osnovni tagovi)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3schools.com/css/default.asp&quot;&gt;css&lt;/a&gt; (može u detalje koga zanima
frontend i neće puno da programira)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3schools.com/js/default.asp&quot;&gt;javascript&lt;/a&gt; (može detaljno koga
zanima programiranje)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3schools.com/git/default.asp&quot;&gt;git&lt;/a&gt; (potrebno je da prođu kroz
prste osnovne komande)(git je bitan u bilo kom poslu u programiranju)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pored toga treba vam neki editor npr &lt;a href=&quot;https://code.visualstudio.com/docs&quot;&gt;vscode&lt;/a&gt;
i na kraju postavljamo sajtove na github i gitlab pages (besplatno).&lt;/p&gt;

&lt;p&gt;Za sva pitanja možete konsultovati ChatGPT (i mi to koristimo), ali ne samo copy
paste, već sa razumevanjem. Toplo preporučujemo ChatGPT za učenje umesto googlanja.&lt;/p&gt;

&lt;p&gt;Prijave za kurs slati do kraja Septembra 2024 na &lt;a href=&quot;mailto:salji@trk.in.rs&quot;&gt;salji@trk.in.rs&lt;/a&gt;
 sa opisom dosadašnjeg iskustva i planova u IT karijeri.&lt;/p&gt;

&lt;p&gt;Više informacije možete
 naći na &lt;a href=&quot;https://dev.trk.in.rs/2024/09/16/internship-srbobran/&quot;&gt;sajtu&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Kurs je besplatan i dobra prilika da vidite da li vas zanima programiranje i
ako bude mesta, nastavite učenje u
Srbobranskom officu radnim danima (pon-pet).&lt;/p&gt;

&lt;p&gt;Slobodno se prijavite, i srednjoškolci i oni stariji koji hoće da se prekvalifikuju u poslu.&lt;/p&gt;

&lt;p&gt;Vidimo se ponedeljkom kod Švrće.&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Sep 2024 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2024/09/16/internship-srbobran/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2024/09/16/internship-srbobran/</guid>
        
        
      </item>
    
      <item>
        <title>Internship 2</title>
        <description>&lt;p&gt;Pozdrav ekipa,&lt;/p&gt;

&lt;p&gt;kompanije Trk Ruby Novi Sad ima otvoreno mesto za jednog praktikanta. Praksa
nije placena posto se ne radi na resavanju konkretnih zadataka od strane naseg
klijenta tako da ni mi ne profitiramo od buducih praktikanata, ali postoji
mogucnost zaposlenja  nakon odradjene prakse.&lt;/p&gt;

&lt;p&gt;Naziv pozicije: Praktikant za razvoj softvera (HTML, CSS, Javascript, Ruby on Rails)&lt;/p&gt;

&lt;p&gt;Kompanija: Trk Ruby Novi Sad&lt;/p&gt;

&lt;p&gt;Lokacija: Novi Sad, Srbija&lt;/p&gt;

&lt;p&gt;Trajanje obuke: 2 meseca, 4 sata dnevno, u prostorijama kompanije&lt;/p&gt;

&lt;p&gt;O kompaniji: Kompanija Trk Ruby Novi Sad je mala porodicna softverska kompanija koja se fokusira na razvoj web aplikacija pomoću najnovijih tehnologija, a prvenstveno pomocu Ruby on Rails frameworka.&lt;/p&gt;

&lt;p&gt;Kvalifikacije:
Osnovna znanja iz programiranja, uključujući objektno orijentisano programiranje. 
Buduci praktikant ne mora da bude sa tehnickog faklulteta, ali mora da poseduje sposobnost logickog razmisljanja i povezivanja, kao i rada u timu
Iskustvo sa HTML, CSS i Javascript je poželjno&lt;/p&gt;

&lt;p&gt;Dodatne informacije:
Ova praksa nije plaćena, ali praktikant će imati priliku da radi na izradi aplikacije uz mentorsku podršku našeg tima. Postoji mogućnost zaposlenja u kompaniji ukoliko praktikant pokaže odgovarajući timski duh i rezultate tokom prakse.&lt;/p&gt;

&lt;p&gt;Prijave poslati na  &lt;a href=&quot;mailto:salji@trk.in.rs&quot;&gt;salji@trk.in.rs&lt;/a&gt;
sa odgovorom na sledeća pitanja:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Koje je vaše dosadašnje iskustvo sa HTML, Javascript i Ruby jezikom&lt;/li&gt;
  &lt;li&gt;Linkovi ka dosadašnjem radu: github profil, primeri sajtova na kom ste radili ako postoje&lt;/li&gt;
  &lt;li&gt;Šta očekujete od prakse, koji su vam planovi za zaposlenje i ukratko o sebi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Rok za prijavu je 6 Maj 2024.&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Apr 2024 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2024/04/23/internship-2/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2024/04/23/internship-2/</guid>
        
        
      </item>
    
      <item>
        <title>Gitlab</title>
        <description>&lt;p&gt;https://docs.gitlab.com/ee/install/docker.html&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export GITLAB_HOME=/srv/gitlab
sudo docker run --detach \
  --hostname gitlab_tunnel.trk.in.rs \
  --publish 443:443 --publish 80:80 --publish 22:22 \
  --name gitlab \
  --restart always \
  --volume $GITLAB_HOME/config:/etc/gitlab \
  --volume $GITLAB_HOME/logs:/var/log/gitlab \
  --volume $GITLAB_HOME/data:/var/opt/gitlab \
  --shm-size 256m \
  gitlab/gitlab-ee:latest

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 25 May 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/05/25/gitlab/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/05/25/gitlab/</guid>
        
        
      </item>
    
      <item>
        <title>Rails Testing</title>
        <description>&lt;h1 id=&quot;rails-testing&quot;&gt;Rails testing&lt;/h1&gt;

&lt;p&gt;We usually use minitest since they are default Rails tool.
You can start learnig from guide &lt;a href=&quot;https://guides.rubyonrails.org/testing.html&quot;&gt;https://guides.rubyonrails.org/testing.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We use slow system test only for a few tests for success path flow. Instead of
system test, we use faster controller tests.
We use faster controller &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ActionDispatch::IntegrationTest&lt;/code&gt; test&lt;/p&gt;

&lt;p&gt;You can find basic minitest assertions
&lt;a href=&quot;https://guides.rubyonrails.org/testing.html#available-assertions&quot;&gt;https://guides.rubyonrails.org/testing.html#available-assertions&lt;/a&gt;
but for each &lt;a href=&quot;https://guides.rubyonrails.org/testing.html#a-brief-note-about-test-cases&quot;&gt;class&lt;/a&gt;
you can use other helpers and assertions like
&lt;a href=&quot;https://api.rubyonrails.org/v7.0.4.2/classes/ActionDispatch/Integration/RequestHelpers.html&quot;&gt;follow_redirect!&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;fixtures&quot;&gt;Fixtures&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://guides.rubyonrails.org/testing.html#the-low-down-on-fixtures&quot;&gt;https://guides.rubyonrails.org/testing.html#the-low-down-on-fixtures&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In each fixture yml file we define &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DEFAULT&lt;/code&gt; that will contain defaults needed
to create valid item (for example presence validation on name and null false in
datable).
We create one fixture with the same name as model, for example
&lt;a href=&quot;https://github.com/trkin/rails_minitest/blob/main/test/fixtures/users.yml&quot;&gt;https://github.com/trkin/rails_minitest/blob/main/test/fixtures/users.yml&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# test/fixtures/users.yml
# https://github.com/trkin/rails_minitest/blob/main/test/fixtures/users.yml
DEFAULTS: &amp;amp;DEFAULTS
  email: $LABEL@example.com
  encrypted_password: &amp;lt;%= User.new.send(:password_digest, &apos;password&apos;) %&amp;gt;
  confirmed_at: &amp;lt;%= Time.zone.now %&amp;gt;

user:
  &amp;lt;&amp;lt;: *DEFAULTS

unconfirmed:
  &amp;lt;&amp;lt;: *DEFAULTS
  confirmed_at:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The reason is that we do not need to think about the name when we a record. For
example when we need a user than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user = users(:user)&lt;/code&gt;, when we need a comment
than we have it as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;comment = comment(:comment)&lt;/code&gt;
Those default records should represent common usage, eg &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;comment(:comment)&lt;/code&gt;
belons to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;posts(:post)&lt;/code&gt; which belongs to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;users(:user)&lt;/code&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 07 Apr 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/04/07/rails-testing/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/04/07/rails-testing/</guid>
        
        
      </item>
    
      <item>
        <title>Docker Tips</title>
        <description>&lt;h2 id=&quot;install-on-ubuntu&quot;&gt;Install on ubuntu&lt;/h2&gt;

&lt;p&gt;Follow instructions on &lt;a href=&quot;https://docs.docker.com/engine/install/ubuntu/&quot;&gt;https://docs.docker.com/engine/install/ubuntu/&lt;/a&gt;
After adding GPG key and repo you can run&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo docker run hello-world
Hello from Docker!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or you can use convenience script&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh ./get-docker.sh --dry-run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Uninstall with&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get purge docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras
sudo rm -rf /var/lib/docker
sudo rm -rf /var/lib/containerd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To enable users to run use docker engine without sudo and you do not have error
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;permission denied while trying to connect to the Docker daemon socket at
unix:///var/run/docker.sock:&lt;/code&gt;
https://docs.docker.com/engine/install/linux-postinstall/&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo usermod -aG docker $USER
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;run ubuntu shell
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run -it ubuntu /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;https://docs.docker.com/engine/install/linux-postinstall/&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Mar 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/03/30/docker-tips/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/03/30/docker-tips/</guid>
        
        
      </item>
    
      <item>
        <title>Aws Cli</title>
        <description>&lt;h1 id=&quot;install-and-configure-aws-cli&quot;&gt;Install and configure AWS cli&lt;/h1&gt;

&lt;p&gt;Install and enable completion&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Ubuntu
sudo apt install awscli

# .bash_profile should source .bashrc
echo complete -C &apos;/usr/local/bin/aws_completer&apos; aws &amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You need keys to connect and configure will store them in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.aws/credentials&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws configure
AWS Access Key ID [None]: 123....4P5Q
AWS Secret Access Key [None]: 123...TCzr
Default region name [None]: us-east-1
Default output format [None]:

cat ~/.aws/credentials
[default]
aws_access_key_id = 123...4P5Q
aws_secret_access_key = 123...TCzr

cat ~/.aws/config
[default]
region = us-east-1

aws configure
AWS Access Key ID [**************4P5Q]:
AWS Secret Access Key [****************TCzr]:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can have several profiles in additional to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[default]&lt;/code&gt;.
To add another profile&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws configure --profile duleorlovic
# this will add [profile duleorlovic] to ~/.aws/config
# and [duleorlovic] to ~/.aws/credentials
# you can use in terraform provider &quot;aws&quot; { profile = &quot;duleorlovic&quot; }
aws ec2 describe-vpcs --profile duleorlovic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can check which profile you are using&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# show current profile settings
aws configure list

# list all profile names
aws configure list-profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;To change profile in shell you can export&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export AWS_PROFILE=duleorlovic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Another way to change profile is to use different credentials file&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AWS_SHARED_CREDENTIALS_FILE=~/.aws/credentials_duleorlovic aws s3 ls s3://my-trk-bucket
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can extract data with query to parse json for example
Find other examples on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aws ec2 describe-instances help&lt;/code&gt;
TODO: add examples&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[*]&lt;/code&gt; array&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.attribute&lt;/code&gt;
you can have &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--output text&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--output json&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--output table&lt;/code&gt;, or you can
use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jq&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# list all public instances, using * returns array of arrays
aws ec2 describe-instances --query &quot;Reservations[*].Instances[*].PublicIpAddress&quot; --output=text
# this returns inline results since it is single array
aws ec2 describe-instances --query &quot;Reservations[].Instances[].PublicIpAddress&quot; --output=text
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can combine columns, for example to show ARN&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aws ec2 describe-instances --region us-east-1 | jq -r &apos;.Reservations[] | .OwnerId as $OwnerId | ( .Instances[] | { &quot;ARN&quot;: &quot;arn:aws:ec2:\(.Placement.AvailabilityZone[:-1]):\($OwnerId):instance/\(.InstanceId)&quot;, &quot;AvailabilityZone&quot;: &quot;\(.Placement.AvailabilityZone)&quot;, InstanceId, PublicDnsName, PrivateDnsName, Tags} )&apos; | jq -s .
[
  {
    &quot;ARN&quot;: &quot;arn:aws:ec2:us-east-1:606470370249:instance/i-0b7175eed059b8f41&quot;,
    &quot;AvailabilityZone&quot;: &quot;us-east-1a&quot;,
    &quot;InstanceId&quot;: &quot;i-0b7175eed059b8f41&quot;,
    &quot;PublicDnsName&quot;: &quot;ec2-34-230-46-141.compute-1.amazonaws.com&quot;,
    &quot;PrivateDnsName&quot;: &quot;ip-172-31-90-19.ec2.internal&quot;,
    &quot;Tags&quot;: [
      {
        &quot;Key&quot;: &quot;Name&quot;,
        &quot;Value&quot;: &quot;test&quot;
      }
    ]
  }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/03/26/aws-cli/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/03/26/aws-cli/</guid>
        
        
      </item>
    
      <item>
        <title>Git Tips</title>
        <description>&lt;h2 id=&quot;git-style&quot;&gt;Git style&lt;/h2&gt;

&lt;p&gt;For Git we follows this guides&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/guides/tree/main/git&quot;&gt;https://github.com/thoughtbot/guides/tree/main/git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you move large number of files, or run linters, that should be in separate
commit (or even separate pull request) and put the command in commit message&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git mv test/fixtures spec
git commit -am&quot;git mv test/fixtures spec&quot;

# or
standardrb --fix spec
git commit -am&quot;standardrb --fix spec&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;code-review&quot;&gt;Code review&lt;/h2&gt;

&lt;p&gt;For code review&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/thoughtbot/guides/tree/main/code-review&quot;&gt;https://github.com/thoughtbot/guides/tree/main/code-review&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When working on some task, for example issue 123 than we usually create a branch
that looks like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i#{issue number}_#{description}&lt;/code&gt; and use commit number at the
end &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit -m&apos;#{some description} ##{issue number}&lt;/code&gt;
For example&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout -b i123_add_test_for_signup
# make changes
git commit -m&apos;Add test for signup #123`
git push -u origin HEAD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;git-hooks&quot;&gt;Git hooks&lt;/h2&gt;

&lt;p&gt;We use git hook for commit message so the issue number is automatically added to
commit message.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat &amp;gt; .git/hooks/prepare-commit-msg &amp;lt;&amp;lt; &apos;HERE_DOC&apos;
#!/bin/bash
#
# Source https://dev.trk.in.rs/2023/03/21/git-tips#git-hooks
#
# https://gist.github.com/jimschubert/9073276
# Automatically adds branch name to every commit message.
# Modified from the stackoverflow answer here: http://stackoverflow.com/a/11524807/151445
#

# Get branch name, use sed to strip name and keep only numbers
# i123_my_branch_name -&amp;gt; 123
issueNumber=$(git branch | grep &apos;*&apos; | grep -o &apos;[0-9]*&apos;)
# issueNumber=$(git branch --show-current)

# Get the first line, ex: from ammending or mmm from git commit -am&apos;mmm&apos;
firstLine=$(head -n1 $1)

# echo firstLine=$firstLine issueNumber=$issueNumber
if [[ -n $issueNumber &amp;amp;&amp;amp; ! $firstLine =~ $issueNumber ]] ; then
  # Prepend issueNumber to COMMIT_MSG
  # echo &quot;i#$issueNumber&quot;&apos; &apos;$(cat &quot;$1&quot;| sed &apos;/^#.*/d&apos;) &amp;gt; &quot;$1&quot;
  #
  # Append issueNumber to COMMIT_MSG
  # echo -n &quot;#$issueNumber&quot; &amp;gt;&amp;gt; &quot;$1&quot; # this will add at the end
  echo $(cat &quot;$1&quot; | sed &apos;/^#.*/d&apos;)&apos; &apos;&quot;#$issueNumber&quot; &amp;gt; &quot;$1&quot;

  # Insert issueNumber at the end of the commit message file
  # sed -i &quot;1s@^@\n\n$issueNumber@&quot; $1
fi
HERE_DOC

chmod +x .git/hooks/prepare-commit-msg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next time you make a commit on a branch &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i123_add_test_for_signup&lt;/code&gt; than commit
message will include &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[123]&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git commit -am&quot;Add test for signup&quot;
[#123] Add test for signup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;gitflow&quot;&gt;Gitflow&lt;/h2&gt;

&lt;p&gt;For big projects we follow GitFlow
so all PR are done on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;develop&lt;/code&gt; branch. Only &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i123_hotfix_something&lt;/code&gt; branch
start from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; and merged back to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;develop&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Nice tutorial:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow&quot;&gt;https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;github-cli&quot;&gt;Github cli&lt;/h2&gt;

&lt;p&gt;We also use gh cli&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# create PR and put commit messages as comment
gh pr create --fill

# assign reviewers
gh pr edit

# rebase and delete local and remote branch
gh pr merge -r -d
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;remove-all-branch-on-which-im-not-the-author&quot;&gt;Remove all branch on which I’m not the author&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#!/bin/bash

current_user=$(git config user.email)

# Remove all local branches on which I&apos;m not the author of the tip

for branch in $(git branch --format=&apos;%(refname:short)&apos;); do
    if [[ &quot;$branch&quot; =~ ^(main|develop|master)$ ]]; then
        continue
    fi
    author=$(git log -1 --format=&apos;%ae&apos; $branch)
    if [ &quot;$author&quot; != &quot;$current_user&quot; ]; then
      echo removing -$branch- $author
      git branch -D $branch
      echo
    fi
done
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/03/21/git-tips/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/03/21/git-tips/</guid>
        
        
      </item>
    
      <item>
        <title>Code Style Guides</title>
        <description>
</description>
        <pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/03/15/code-style-guides/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/03/15/code-style-guides/</guid>
        
        
      </item>
    
      <item>
        <title>Cloudflare Tunnel</title>
        <description>&lt;p&gt;Ngrok is a service which gives you random url whenever you start a new tunnel.
&lt;a href=&quot;https://www.cloudflare.com/products/tunnel/&quot;&gt;Clodflare tunnel&lt;/a&gt; is a free
service that you can use as ngrok alternative.&lt;/p&gt;

&lt;p&gt;Install https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/tunnel-guide/local/&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# macOS
brew install cloudflared
# ubuntu
wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb &amp;amp;&amp;amp; dpkg -i cloudflared-linux-amd64.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and login&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cloudflared tunnel login
# this will create and download ~/.cloudflared/cert.pem
# you can read pem file in future so you know on which account you have access
openssl x509 -in cert.pem -noout -ext subjectAltName
X509v3 Subject Alternative Name: 
    DNS:*.my-domain.com, DNS:my-domain.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can create a temporary tunnel with random url&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cloudflared tunnel --url http://localhost:3000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and it will be available under .trycloudflare.com like
&lt;a href=&quot;https://request-composer-pools-requirements.trycloudflare.com&quot;&gt;https://request-composer-pools-requirements.trycloudflare.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For long living tunnels which uses the same url you should use local
&lt;a href=&quot;https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/tunnel-guide/local/&quot;&gt;https://developers.cloudflare.com/cloudflare-one/connections/connect-apps/install-and-setup/tunnel-guide/local/&lt;/a&gt;
or remotelly managed tunnels&lt;/p&gt;

&lt;h2 id=&quot;locally-managed-tunnels&quot;&gt;Locally managed tunnels&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# list all tunnels created previously using cloudflared cli on web
cloudflared tunnel list

# create tunnel on cloudflare site and local config.json file
cloudflared tunnel create mytunnel
# Tunnel credentials written to /home/dule/.cloudflared/asd....asd.json

# create config file that uses this credentials and tunnel name
cat &amp;gt; ~/.cloudflared/config.yaml &amp;lt;&amp;lt; &apos;HERE_DOC&apos;
url: http://localhost:3000
tunnel: mytunnel
# home shortcut ~/.cloudflared/ will not work
credentials-file: /home/dule/.cloudflared/asd....asd.json
HERE_DOC

# create DNS CNAME record for mytunnel with value asd...asd.cfargotunnel.com
cloudflared tunnel route dns mytunnel mytunnel.trk.in.rs

# start the tunnel, default is to read cert from .cloudflared/cert.pem and .cloudflared/config.yml
cloudflared tunnel run mytunnel
# but you can define using params for credentials json and config yml
cloudflared --credentials-file doc/cloudflared/f77e7809-5f2b-497e-9086-f13c1ad8b222.json --config doc/cloudflared/config.yml tunnel run mytunnel

# check tunnel status
cloudflared tunnel info mytunnel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For multiple domains you just need to add same CNAME records to other
subdomains.&lt;/p&gt;

&lt;p&gt;To block by IP address, go to Security &amp;gt; WAF and create rule with “IP Source
Address” “is not in” {my ip address} And “Hostname” “equals”
“mytunnel.trk.in.rs” than “Block”.&lt;/p&gt;

&lt;p&gt;If you install as a service than you need to stop that service&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl status cloudflared
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you need another account you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;origincert&lt;/code&gt; param
https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/configure-tunnels/tunnel-run-parameters/#origincert&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cloudflared --origincert doc/cloudflared/cert.pem tunnel list
cloudflared --origincert doc/cloudflared/cert.pem tunnel create
# this will create json in the same folder as pem doc/cloudflared/asd.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;config&lt;/code&gt; param to configure port
https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/configure-tunnels/tunnel-run-parameters/#config&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cloudflared --origincert doc/cloudflared/cert.pem --config doc/cloudflared/config.yml tunnel run mytunnel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To debug use&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cloudflared --loglevel debug tunnel run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;remotelly-managed-tunnels&quot;&gt;Remotelly managed tunnels&lt;/h2&gt;

&lt;p&gt;After install&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo cloudflared service install eyJh....

Installing cloudflared client as a system launch daemon. cloudflared client
will run at boot
2024-04-12T05:14:09Z INF Outputs are logged to
/Library/Logs/com.cloudflare.cloudflared.err.log
/Library/Logs/com.cloudflare.cloudflared.out.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;cloudflare-dns&quot;&gt;Cloudflare DNS&lt;/h1&gt;

&lt;p&gt;If you need direct ssh port 22 access than you need to disable Proxied and use
DNS only proxy status.&lt;/p&gt;

&lt;p&gt;Other solution is to tunnel ssh as http service&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# config.yml
ingress:
  - hostname: ssh-my-app.trk.in.rs
    service: ssh://localhost:22
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and use cloudflared access&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host ssh-my-app.trk.in.rs
  ProxyCommand $(brew --prefix)/bin/cloudflared access ssh --hostname %h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Similarly for mysql connection you can use tcp service&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# config.yml
ingress:
  - hostname: mysql-my-app.trk.in.rs
    service: tcp://localhost:3306
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and from remote you can connect using&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cloudflared access tcp --hostname mysql-my-app.trk.in.rs --url localhost:3306

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 23 Feb 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/02/23/cloudflare-tunnel/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/02/23/cloudflare-tunnel/</guid>
        
        
      </item>
    
      <item>
        <title>Build Kindergarten Exchange App</title>
        <description>&lt;p&gt;As a practice task in our &lt;a href=&quot;/2023/01/04/internship/&quot;&gt;first intership&lt;/a&gt;
we are rebuilding a webapp that will help parents organize themselves and find
free places in kindergartens that are closer to them. When there are no
vacancies the only way to move the kids to another kindergarten is to find
someone else who also wants to move. Existing app source is
&lt;a href=&quot;https://github.com/trkin/premesti.se&quot;&gt;https://github.com/trkin/premesti.se&lt;/a&gt; and
we are rebuilding to use latest tools like &lt;a href=&quot;https://turbo.hotwired.dev/&quot;&gt;Turbo&lt;/a&gt;
Source code is on github&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/trkin/kindergarten-exchange&quot;&gt;https://github.com/trkin/kindergarten-exchange&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Main tools that we will use:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ruby on Rails as a server side engine&lt;/li&gt;
  &lt;li&gt;Github projects for organizing tasks&lt;/li&gt;
  &lt;li&gt;Neo4j graph database to find matches in rotations&lt;/li&gt;
  &lt;li&gt;Figma for designs&lt;/li&gt;
  &lt;li&gt;Tailwind for styles&lt;/li&gt;
  &lt;li&gt;Jekyll for blog&lt;/li&gt;
  &lt;li&gt;Turbo and Stimulus for registration and chat&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All practicioners should choose one area in which to become a master so they can
teach other teammates.&lt;/p&gt;

&lt;p&gt;Main features should be:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;user registration using various ways: phone number, email, social buttons&lt;/li&gt;
  &lt;li&gt;user select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;move&lt;/code&gt; ie kindergarten in which they are interested in&lt;/li&gt;
  &lt;li&gt;user can share their moves on social networks&lt;/li&gt;
  &lt;li&gt;graph engine that calculates matches for each new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;move&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;for each match a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chat&lt;/code&gt; is created and notifications are sent&lt;/li&gt;
  &lt;li&gt;admin pages to invite users to register, to send promotional emails and users
can unsubscribe to them&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Advanced features:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;enable payment so moves that includes at least one premium move can chat
immediatelly, and moves that are all free are waiting one week for
notification and chat (send email to buy premium or to wait).
Premium can be obtained by sharing on social networks. Use other features for
premium like: free sms notification&lt;/li&gt;
  &lt;li&gt;create mobile apps for Android and iOS&lt;/li&gt;
  &lt;li&gt;create Viber app for registration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;App should be using I18n transations and covered with tests.&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Feb 2023 00:00:00 +0000</pubDate>
        <link>https://dev.trk.in.rs/2023/02/21/build-kindergarten-exchange-app/</link>
        <guid isPermaLink="true">https://dev.trk.in.rs/2023/02/21/build-kindergarten-exchange-app/</guid>
        
        
      </item>
    
  </channel>
</rss>
